#! /bin/sh

###############################################################################
###									    ###
###			GNU Interactive Tools unpack script	    	    ###
###	 Copyright (C) 1997-2000, 2006-2007 Free Software Foundation, Inc.  ###
###                                                                         ###
###                  This file is part of gnuit.                            ###
###                                                                         ###
###  gnuit is free software: you can redistribute it and/or modify it       ###
###  under the terms of the GNU General Public License as published         ###
###  by the Free Software Foundation, either version 3 of the               ###
###  License, or (at your option) any later version.                        ###
###                                                                         ###
###  gnuit is distributed in the hope that it will be useful, but           ###
###  WITHOUT ANY WARRANTY; without even the implied warranty of             ###
###  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          ###
###  GNU General Public License for more details.                           ###
###                                                                         ###
###  You should have received a copy of the GNU General Public              ###
###  License along with this program. If not, see                           ###
###  http://www.gnu.org/licenses/.                                          ###
###									    ###
###		    Written by Tudor Hulubei and Viorel Anghel.		    ###
###									    ###
###############################################################################


# We can have one or two arguments.
if test "$#" -lt 2; then
    echo "usage: $0 destdir archives..."
    exit 1
fi

destdir="$1"
srcdir=`pwd`

cd "$destdir" 2> /dev/null
if test "$?" -ne 0; then
    gitmkdirs "$destdir"
    if test "$?" -ne 0; then
	exit 1;
    fi

    cd "$destdir"
    if test "$?" -ne 0; then
	exit 1;
    fi
fi

exit_code=0
while true; do
    archive=$2
    lcarchive="$(echo "$archive"|tr '[:upper:]' '[:lower:]')"

    if test -d "$archive"; then
	echo "$0: $archive: not a regular file" >&2
	exit_code=1
    else
	# `ln' will fail if $destdir is the same as $srcdir.
	ln -s "$srcdir/$archive" "$archive" 2> /dev/null
	link_created=$?

	case "$lcarchive" in
        *.tar)                      tar -xvf "$archive";;
        *.tar.bz)                   bzip -dc "$archive"|tar -xvf -;;
        *.tar.bz2)                  bzip2 -dc "$archive"|tar -xvf -;;
        *.tar.gz)                   gzip -dc -- "$archive"|tar -xvf -;;
        *.tar.z)                    uncompress -dc "$archive"|tar -xvf -;;
        *.cpio)                     cat "$archive"|cpio -i -d;;
        *.cpio.bz)                  bzip -dc "$archive"|cpio -i -d;;
        *.cpio.bz2)                 bzip2 -dc "$archive"|cpio -i -d;;
        *.cpio.gz)                  gzip -dc -- "$archive"|cpio -i -d;;
        *.cpio.z)                   uncompress -dc "$archive"|cpio -i -d;;
        *.tgz)                      gzip -dc -- "$archive"|tar -xvf -;;
        *.t[ar]z)                   uncompress -dc "$archive"|tar -xvf -;;
        *.jar)                      jar -xvf "$archive";;
        *.zip)                      unzip -o "$archive";;
        *.arj|*.a[0-9][0-9])        unarj x "$archive";;
        *.rar|*.r[0-9][0-9])        rar x -y -r -v "$archive";;
        *.lha|*.lzh)                lha -xvf "$archive";;
        *.z)                        uncompress "$archive";;
        *.bz)                       bzip -d "$archive";;
        *.bz2)                      bzip2 -d "$archive";;
        *.gz)                       gunzip "$archive";;
        *.shar)                     sh "$archive";;
        *.uu)                       uudecode "$archive";;
        *.rpm)                      rpm2cpio "$archive"|cpio -v -i -d;;
        *.deb)                      ar -xv "$archive";;
        *.a)                        ar -xv "$archive";;
        *) echo "$0: $archive: unknown archive type" >&2
           exit_code=1
        esac

	if test $? -ne 0; then
	    exit_code=$?
	fi

	if test "$link_created" -eq 0; then
	    rm "$archive"
	fi
    fi

    shift
    if test $# -eq 1; then
	exit $exit_code
    fi
done
