-*-outline-*--


* GNU Interactive Tools TODO
============================

** 4.3.21
=========

*** Look in the email for Tom Bates' nsr-tandem-* port.
*** GIT crashes on switch to a new dir (^X d).
    The statvfs() syscall overwrites the path parameter to
    get_fs_usage().  It probably has something to do with 64bit I/O.
*** F2 should work on *.info.gz files.
*** Make install doesn't work.
*** Make dist doesn't work.

*** CYGWIN compilation:
*** git isn't displaying the title properly under cygwin.
*** Under cygwin git seems to have a problem installing the term dir.
*** TERM=cygwin.  Is it working ok with .gitrc.cygwin?
*** Make sure configuration_getline() works.  Text vs. binary?
*** There is a refresh problem, but is most likely because there is
    no .gitrc.XXXX for the CYGWIN terminal.  Add one.


*** Read previous emails about problems/improvements reported by Xax.
*** Look at all the places using 64bit I/O and check whether 64bit
    arithmetic is ok.
*** 64bit I/O.

*** Test w/ redhat 6.2.  Where?  Vmware?
*** For special files, size should be ignored in comparisons.
*** LONG_LONG_MAX on other platforms?
*** %Ld vs %lld.  They're the same thing in GCC.  How about other compilers?
*** How do we detect/implement support for 64bit I/O on Solaris?
*** Test it on Solaris 64 too (including creating files >2Gb).  Add
    Solaris to NEWS.


** 4.3.22
=========

*** Hide the . directories/files.
*** The second bug reported by Xax (the mv -- '-tutu' gogu problem).


** Bugs
=======

*** git relies a lot on external tools.  64bit support is not
    available in many of them.

*** There is a potential race on some systems due to the fact that
    we're using sleep and SIGALRM at the same time.

*** `make dist' creates git.html twice.

*** If I copy a directory over some other directory git asks me
    whether or not I want to overwrite it, which doesn't make much
    sense, since it will copy the source directory _inside_ the
    destination directory anyway.

*** When I copy a file which is in fact a link, it will copy it with
    the permissions of the link (+ umask).

*** Directories that are symbolic links are copied as 0-length files!

*** What happens if the size of the files is large, but also the
    number of the files in that directory is very large?  The
    informational text at the bottom of the panels might become too
    long!  Reiserfs file systems might allow large number of files,
    and we need to be able to handle it gracefully!  Maybe we need to
    display the number of files with M/G/T too.


** Improvements
===============

*** Pass the resize command to the shell.  Is it possible?

*** Is it worth adding the directory to the history at every `cd'?

*** Put assert()s in the code.

*** Mark somehow the end of the visible portion of the long file names.

*** O facilitate rudimentara de help prin | la more (dar bazat pe
    structurile interne).  Sa faca fie un fel de grep intern dupa nume
    de functii fie sa spuna functia asociata cu o secventa de taste.
    Pe status bar sa scrie ceva de genul: "Type F1 for keyword based
    hint/help.".

*** It might be a good ideea to install all the scripts in a shared
    directory where only git has access.

*** gitview: input through stdin; maybe even act as a filter.

*** Mail notification (not on xterm-like terminals)?

*** PAGER instead of GIT_PAGER?

*** I get an error message if I stop a recursive copy with ^G.  The
    problem is that I don't know why the cp terminated, I only know
    that there was an error.

*** stderr de la gitunpack sa se afiseze in linia de comanda.  De fapt
    asta e o problema mai generala - codul de eroare intr-un pipe este
    dat de ultima comanda, daca celelalte crapa shell-ul nu-mi spune
    nimic :-(

*** wavplay doesn't know how to play compressed `.wav' files (it
    doesn't accept input through stdin).

*** ^L during copy?

*** Can I get rid of the screen redraw when we start bg commands?

*** Ce tasta sa folosesc pentru name completion pentru fisiere,
    hostname, director, nume utilizator, variabile shell?  Anyway, e
    misto cum face kde-ul in "Execute command".

*** Horizontal scrolling in gitps.

*** Do what Vang said (just like in PATH).  What was that?

*** Jump to links (symbolic or not).

*** A unique configuration file (gitrc), with separate sections for
    each terminal type.  Will it bee too slow (termcap vs. terminfo)?

*** Can we restore the original screen in xterm (just like xemacs)?
    What happens if I start a second git from within the first one?

*** Mouse support?


** Miscelaneous Ideas/Minor Bugs
================================

*** Posibila optimizare.  Pentru tipurile de pattern-uri foarte comune
    (*.xxx, xxx*, etc) sa skip fnmatch si sa fac cu siruri.  Poate fi
    mult mai rapid.

*** Daca rescriu fisierele de configurare, sa se poata pune si ; in
    campurile alea: fie quotez ; (\;), fie schimb formatul.

*** isearch w/ regexps, or at least with shell patterns.

*** De facut ce zicea Andi: in X sa existe o posibilitate de a porni
    programe direct in background.  Poate ca ar trebui tinuta o lista
    cu programele ce trebuie pornite in background.

*** MIME types?

*** Relative symbolic links.

*** De citit din fiecare director un fisier in care sa scrie ce
    fisiere din directorul respectiv nu trebuie afisate.

*** De actualizat la history-ul din bash-2.01, daca e mai nou (si asa
    pare).

*** panel_compare_files should be able to compare special files.

*** .gitrc.common sa se incarce si din home.  Problema e, de unde se
    incarca GIT-FTI-urile?  Din global common, apoi din local common
    si apoi din local specific?  De ce nu si din global specific
    (pentru ca acolo nu exista)?

*** Daca apas ceva pe isearch care in mod normal opreste search-ul
    caracterul ala sa nu se piarda.  De exemplu daca apas F5 in
    isearch vreau sa faca F5, nu sa-mi scrie aiureli pe ecran.

*** Isearch should be more similar to Emacs: the first uppercase
    character should make the search case sensitive.

*** ^S^M should look for the string in non-incremental mode.

*** From Emacs' term/...:
    (4) The uses of the "k0" capability are inconsistent; sometimes it
    describes F10, whereas othertimes it describes F0 and "k;" describes F10.
    Emacs attempts to politely accommodate both systems by testing for
    "k;", and if it is present, assuming that "k0" denotes F0, otherwise F10.

*** In manualul emacs-ului, la sectia Variables Controlling Display
    scrie ca emacs-ul trimite sirul ti cand intra si te cand iese.
    Poate ca ar trebui sa fac si eu la fel...

*** Get rid of the second `overwrite' question at move.

*** De facut in gitaction test cu valoarea intoarsa si de mutat pauza
    in git.  Cand apas F2 pe RMAIL intra in emacs -f rmail.  Dar cand
    iese nu trebuie sa faca nici o pauza (sa nu astepte sa apas o
    tasta).

*** Ar fi misto sa pot specifica pentru fiecare director in parte un
    filtru.  Eventual sa am in fiecare director un fisier (.gitfilter)
    in care sa am o lista de filtre...

*** La copiere sa se poata intercala filtre.  De exemplu, sa-i dau F5
    pe /dev/hdb (dorind sa-l copiez in alta parte) si sa pot specifica
    filtrul `gzip -9' in asa fel incat fisierul sa fie copiat direct
    comprimat.

*** La make install sa fie create directoarele /mnt/fd0 si /mnt/fd1 pe
    Linux daca nu exista.  Eventual de facut o lista cu numele
    floapelor pe diferite masini si de creat directoarele /mnt/xxx
    corespunzatoare (sau macar sa anunte ca nu exista).

*** F2 pe o poza/film necomprimat(a) sa o decomprime daca nu o poate
    trimite prin pipe.  Sa o/il si stearga la sfarsit, evident.  (si
    .ps-uri, ...)

*** Campurile ce pot fi modifcate direct (nume, owner, grup, data,
    mod, etc) sa poata fi modificate direct in panou.  Te duci pe
    fisierul respectiv si te apuci si scrii acolo.  Frumos, nu? Dar
    mai trebuie studiata treaba...

*** Pe langa F2 care iti da informatii despre un fisier in funcie de
    extensie, sa existe si o tasta pe care daca apesi sa se EXECUTE o
    actiune in functie de extensie.  De exemplu, .pgp sa fie
    decriptate, arhivele decomprimate, etc.

*** Oare ar merge mai repede daca in loc sa folosesc fnmatch pentru
    fiecare shell pattern din [GIT-FTI] as folosi o singura expresie
    regulata?

*** De cautat programul "locate" in ./configure.

*** De facut secvente de escape pentru culori pe status bar.

*** Redenumiri dupa expr. regulate (*.man -> *.1)

*** Poate ca ar fi bine daca as testa daca se poate cp -f.

*** De facut sa se poata vedea destinatia link-urilor simbolice.

*** scroll-step in gitps.

*** Daca schimb modul unui fisier lung si partea static din
    il_read_line e prea lunga, arata f. urat.

*** isearch history.

*** De facut sa se mute directoare si pe file-system-uri diferite.

*** De facut sa se poata schimba si chestia cu dot match dinamic.

*** Daca o secventa de taste nu e recunoscuta, sa fie ignorata?

*** gitps-ul should be able to sort the processes based on a given
    field.

*** hpterm doesn't work well (it has cookies).

*** Separarea campurilor din fisierele de configurare trebuie facuta
    cu strtok().  Oricum trebuie schimbat puternic pe acolo.

*** C-c U nu merge pe directoare care sunt link-uri.  Pentru ca du -s
    sa mearga si pe linkuri symbolice trebuie sa-i dau -D.  Din
    nefericire asta e extensie GNU, asa ca du ar trebui implementat
    intern ca sa mearga...
