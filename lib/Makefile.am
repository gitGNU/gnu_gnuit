## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Automake, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Invoked as: gnulib-tool --import --dir=. --lib=libgnu --source-base=lib --m4-base=m4 alloca error exit exitfail fnmatch fnmatch-gnu fsusage full-read full-write getopt gettext quote quotearg safe-read safe-write strtoimax strtol strtoll strtoul strtoull strtoumax xalloc xalloc-die xstrtol xstrtoumax
# Reproduce by: gnulib-tool --import --dir=. --lib=libgnu --source-base=lib --m4-base=m4   alloca error exit exitfail fnmatch fnmatch-gnu fsusage full-read full-write getopt gettext quote quotearg safe-read safe-write strtoimax strtol strtoll strtoul strtoull strtoumax xalloc xalloc-die xstrtol xstrtoumax

AUTOMAKE_OPTIONS = 1.5 gnits no-dependencies

noinst_LIBRARIES = libgnu.a

libgnu_a_SOURCES =
libgnu_a_LIBADD = @LIBOBJS@
AM_CPPFLAGS = -I ../src
EXTRA_DIST = tilde.c tilde.h history.c history.h
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

## begin gnulib module alloca

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create an <alloca.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(ALLOCA_H)
alloca.h: alloca_.h
	cp $(srcdir)/alloca_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

libgnu_a_LIBADD += @ALLOCA@
## end   gnulib module alloca

## begin gnulib module exit

libgnu_a_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module exitfail

libgnu_a_SOURCES += exitfail.h exitfail.c

## end   gnulib module exitfail

## begin gnulib module fnmatch

BUILT_SOURCES += $(FNMATCH_H)
EXTRA_DIST += fnmatch_.h fnmatch_loop.c

# We need the following in order to create an <fnmatch.h> when the system
# doesn't have one that supports the required API.
all-local $(libgnu_a_OBJECTS): $(FNMATCH_H)
fnmatch.h: fnmatch_.h
	cp $(srcdir)/fnmatch_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += fnmatch.h fnmatch.h-t

## end   gnulib module fnmatch

## begin gnulib module fsusage

libgnu_a_SOURCES += fsusage.h

## end   gnulib module fsusage

## begin gnulib module full-read

libgnu_a_SOURCES += full-read.h full-read.c

## end   gnulib module full-read

## begin gnulib module full-write

libgnu_a_SOURCES += full-write.h full-write.c

## end   gnulib module full-write

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create an <getopt.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(GETOPT_H)
getopt.h: getopt_.h
	cp $(srcdir)/getopt_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

## end   gnulib module getopt

## begin gnulib module gettext

libgnu_a_SOURCES += gettext.h

## end   gnulib module gettext

## begin gnulib module quote

libgnu_a_SOURCES += quote.h quote.c

## end   gnulib module quote

## begin gnulib module quotearg

libgnu_a_SOURCES += quotearg.h quotearg.c

## end   gnulib module quotearg

## begin gnulib module safe-read

libgnu_a_SOURCES += safe-read.h safe-read.c

## end   gnulib module safe-read

## begin gnulib module safe-write

libgnu_a_SOURCES += safe-write.h safe-write.c

## end   gnulib module safe-write

## begin gnulib module xalloc

libgnu_a_SOURCES += xalloc.h xmalloc.c

## end   gnulib module xalloc

## begin gnulib module xalloc-die

libgnu_a_SOURCES += xalloc-die.c

## end   gnulib module xalloc-die

## begin gnulib module xstrtol

libgnu_a_SOURCES += xstrtol.h xstrtol.c xstrtoul.c

## end   gnulib module xstrtol

## begin gnulib module xstrtoumax

libgnu_a_SOURCES += xstrtoumax.c

## end   gnulib module xstrtoumax


# Makefile.am ends here
